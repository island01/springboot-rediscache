<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qyer.mapper.UserMapper">


  <cache type="com.qyer.rediscache.RedisCache" eviction="LRU"
          flushInterval="60000"
           size="1024"
           readOnly="true"/>

 <!--如果需要某一条sql语句不适用缓存，可这样设置
  <select id="getOrder" parameterType="int" resultType="TOrder"  useCache="false">
    ...
  </select>
  -->
  <resultMap id="BaseResultMap" type="com.qyer.entity.UserEntity">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="userName" property="userName" jdbcType="VARCHAR"/>
    <result column="passWord" property="passWord" jdbcType="VARCHAR"/>
    <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, userName, passWord,  nick_name
  </sql>

  <select id="getAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM users
  </select>

  <select id="getOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM users
    WHERE id = #{id}
  </select>

  <insert id="insert" parameterType="com.qyer.entity.UserEntity">
    INSERT INTO
    users
    (userName,passWord)
    VALUES
    (#{userName}, #{passWord})
  </insert>

  <update id="update" parameterType="com.qyer.entity.UserEntity">
    UPDATE
    users
    SET
    <if test="userName != null">userName = #{userName},</if>
    <if test="passWord != null">passWord = #{passWord},</if>
    nick_name = #{nickName}
    WHERE
    id = #{id}
  </update>

  <delete id="delete" parameterType="java.lang.Long">
    DELETE FROM
    users
    WHERE
    id =#{id}
  </delete>

</mapper>